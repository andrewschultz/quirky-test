
start_at = nameless_lameness
start_theme = my_theme

## Defines locations in the world

locations {
   nameless_lameness      : location "You are surrounded by nameless lameness. It's all very, very grey." graphic = "lameness_16" ;
   bold_hub  : location "You are in a bold hub." ;
}

# Defines things in the world (scenery cannot be carried)

objects {
  ooh_task : object "Ooh Task to Ask ('Ooh Task')" ;
}

integers {
   score : integer "0" ;
   bonus_score : integer "0" ;
   max_score : integer "1" ;
   max_bonus_score : integer "1" ;
}

vocabulary {
   : noun      / aliases = [task, ask]
}


connections {

   ## Connects locations together (bidirectional)
   
   from, direction, to = [
      ## bold_hub,     north, bold_hub
   ]
}

barriers {
   
} 

booleans {
   footnotes_available : boolean "false" scope="survivor";
   turkey_quest_point : boolean "false" ;
   in_debug: boolean "false" ;
}

subroutines {
   add_point : subroutine {
      : print "Your score just went up by a point.";
      : increment "score";
      }
   add_bonus : subroutine {
      : print {( "<" + "You just found a bonus point!" + bonus_alert + "<6>>" )};
      : increment "bonus_score";
      }
   init : subroutine {
   : print "QUIRKY TEST: a tutorial of sorts by Andrew Schultz!" ;
   : press_any_key ;
   : clear_screen;
   : print "Submitted for the 2025 TALP competition." ;
   : press_any_key ;
   : if (footnotes_available) {
     : print "Because you went through once, footnotes are now available.";
     : clear_screen;
     }
   }
}

strings {
   my_score : dynamic_string {( score + "/" + max_score )}
   bonus_alert: dynamic_string {( bonus_score == 0 ? " There are a few in the game, and SCORE will let you know your progress." : "" )}
}

themes {
   my_theme : theme {
      status_bar {
         : header_text;
         : dynamic_text "my_score" ;
      }
      colors {
         status_bar_pen   = 15
         status_bar_paper = 9
      }
      system_messages {

	ask_new_game                                   = Would you like to restart Quirky Test?
	ask_quit                                       = Do you wish to quit Quirky Test?
	post_quit = I hope you enjoyed the experience. Pressing any key will restart the game.
	you_cant_go_that_direction                     = There's no exit that way. EXITS will show which there are.
	unknown_verb                                   = Nothing comes up from that. VERBS gives a list of what you need, though there are ones to guess, too.
   }
      }
   }


## Print the objective when the game starts

on_debug {
   : set_true "in_debug" ;
   : gosub "init" ;
}

on_startup {
   : gosub "init" ;
}

## Execute this every time a player moves or redescribes a location

on_describe {
   : if (is_at "nameless_lameness" ) {
      : print "Try X ME." ;
   }
}

## Test VERB NOUN that the player types and executes conditional actions

on_command {
   : match "salesmen _"  {
      : if (is_at "nameless_lameness") {
         : print "Good guess, if this were an anagram game." ;
         }
      }
   : match "turkey quest" {
      : if (turkey_quest_point) {
         : print "Hey, now. I'll poke fun at myself a bit, but repeating the joke." ;
         }
      : else {
         : print "Ah! Yes, you are in the spirit of things, here. Have a bonus point." ;
         : set_true "turkey_quest_point" ;
         : gosub "add_bonus";
      }
   }
   : if (in_debug) {
      : match "wingame _"  {
         : print {( footnotes_available ? "Already won game, but restarting with footnotes still available." : "Auto-winning game so footnotes are available on reboot." )} ;
         : set_true "footnotes_available";
         : win_game ;
      }
   }
   : match "exits _" {
      : if (is_at "nameless_lameness") {
         : print "There's a puzzle here to start. The tutorial can walk you through it." ;
         }
      : else {
         : print "I should list exits here.";
      }
   }
   : match "drop _" {
      : print "While classic text adventures often required the player to use DROP due to inventory limits, this is often regarded as needless fiddling today. Text adventures often take steps to keep the player's inventory manageable so they can focus on puzzles, getting rid of items that are no longer necessary.";
   }
   : match "x me" {
      : if (is_carried "ooh_task") {
         : print "Got what you need." ;
      }
      : else {
         : pocket "ooh_task" ;
         : print "You find something called Ooh, Task to Ask." ;
         : gosub "add_point";
      }
   }
   : match "score _"  {
      : print {( "Your <core score<4>> is " + score + " out of <" + max_score + "<" + "#f00" + ">>." )} ;
      : print {( "Your <bonus score<#f80>> is " + bonus_score + " out of " + max_bonus_score + "." )} ;
      }
}


assets {
   graphics {
      lameness_16 : base64_png "iVBORw0KGgoAAAANSUhEUgAAAQAAAAAoBAMAAADj1Dm6AAAAMFBMVEVSUlKtra2fn5+YmJimpqZgYGBnZ2dubm5ZWVl1dXWRkZGDg4NLS0u0tLR8fHyKioo9s6mBAAAB6ElEQVRYw+XYIZaDMBAGYHIELrACvQ6JRdUjse0RKmvpARBcAIHEcgFEZS0KzxXovja0ZCYzJARq9r8A3yOTySSeJyN8meGVPnym+SR45SaTPXMtZBKZtJsSP1O9c5xylrmMf/HemQA/CiCCgN8J0G4NEAuAWgsoICCZvn9/AQ5rAQMBuOkBuTvA0wJCqgQAIEGAOAZrYAoYDAFKCeQIcLcHCBUAtkHNAhIEiJ0BoAgCUIO3+QrMfkAKAYfVgH4OqCEg+zIgAICWWoEUlMAHUMrvnwyLUC0CY0C3OSDSArIvAAYdQPkBmi7gABAEINQBsozog+l6gG8BaNcAKh4AjwIAqHcH+DYAOAyQZyELOP87QMkBBAmIdIB2c4C/AGi4Rjirwq4jzwJ+CXy8CwflPNadRRsCxFaAlAaU3wXcScBRB/BJQMQAPjNxYQBg54FlQL09YHQAtBCQE/eS2VD4Bpw4wGwX9jsDLmaAhgNcdwWENoACAdDFoASAcdRtQ1dAQgOqVYCo4XaBpggYQMkAyMOwsQXgIqiITrQE6HWX42VA4ggAUzn5PIEAhSNAIAD/PkIDUC+kbqcXK0C9NwBN5b0tIKeGIrQCchsAgNC9TyBAYAHoqE6o7EP+jSqC7yMmALgG6AcovfgBhBvnaozG45IAAAAASUVORK5CYII=";
   }
}